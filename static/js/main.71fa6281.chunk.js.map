{"version":3,"sources":["useEAData.js","sliders.js","FileUpload.js","ThreeVis/InstancedPoints.js","ThreeVis/utils.js","ThreeVis/useMousePointInteraction.js","ThreeVis/Controls.js","ThreeVis/Effects.js","ThreeVis/ThreeVis.js","index.js","usePlayerControl.js","useKeyEvents.js"],"names":["THREE","require","getColor","d","color","Color","toArray","computeColors","data","map","is_best","is_feasible","flat","ProgressBarSlider","withStyles","root","height","thumb","width","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","BaseSlider","margintop","marginleft","top","background","ProgressBar","min","max","now","label","onChange","className","defaultValue","valueLabelDisplay","aria-label","value","step","Typography","GeneralSlider","valueLabelFormat","FileUpload","setContent","ref","useRef","reader","useMemo","fr","FileReader","onload","e","JSON","parse","result","type","style","display","accept","readAsText","target","files","onClick","current","click","scratchObject3D","Object3D","InstancedPoints","sphereSize","nPoints","speed","selectedPoint","setSelectedPoint","meshRef","colorRef","useThree","scene","aspect","points","colors","colorArray","Float32Array","show","index","useEffect","pointsAnim","onFrame","useSpring","config","duration","useAnimatedLayout","mesh","colorAttrib","selectedSize","Array","length","fill","forEach","i","slice","x","y","z","position","set","scale","setScalar","updateMatrix","setMatrixAt","matrix","needsUpdate","instanceMatrix","updateInstancedMeshMatrices","onSelectPoint","mouseDownRef","handlePointerDown","clientX","clientY","handleClick","event","instanceId","Math","sqrt","pow","stopPropagation","useMousePointInteraction","args","frustumCulled","onPointerDown","attach","attachObject","vertexColors","VertexColors","group","interpolate","size","includeNegative","out","_v","t","push","combinations","key","distance","intensity","decay","extend","TrackballControls","Controls","minDistance","maxDistance","defaultPosition","controls","camera","gl","useFrame","update","select","domElement","on","up","up0","dynamicDampingFactor","keys","mouseButtons","LEFT","MOUSE","PAN","MIDDLE","ZOOM","RIGHT","ROTATE","Effects","composer","Vector2","setSize","render","bloom","resolution","strength","radius","threshold","attachArray","FXAAShader","material-uniforms-resolution-value","renderToScreen","EffectComposer","ShaderPass","RenderPass","UnrealBloomPass","grid","ThreeVis","fov","near","far","onPointerMissed","skyColor","groundColor","rotation","ReactDOM","useState","fileData","setFileData","eaData","sourceData","limits","n","Object","times","time","maxTime","scaleLinear","domain","range","point","pointsData","idx","fitness_value","toFixed","constraints_sum","useEAData","setSphereSize","setSpeed","setTime","thisTime","play","setPlay","setPlayCb","playRef","removeTimeout","useCallback","playCb","clearTimeout","playFunc","setTimeout","stopPlay","tooglePlay","PlayerControl","icon","faStepBackward","faCaretLeft","faPause","faPlay","faCaretRight","faStepForward","usePlayerControl","speedStep","minSpeed","maxSpeed","document","onkeydown","tagName","code","useKeyEvents","unit","href","getElementById"],"mappings":"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","file":"static/js/main.71fa6281.chunk.js","sourcesContent":["import { useMemo } from 'react';\nimport { scaleLinear, max } from 'd3';\nimport eaData from './data/ea_data.json';\nconst THREE = require('three');\n\nconst pointsScale = 25; // Size to fill the screen\n\n// const colors = ['#ffd700', '#ffb14e', '#fa8775', '#ea5f94', '#cd34b5', '#9d02d7', '#0000ff'];\n\nconst getColor = d => {\n  let color;\n  switch (d) {\n    case 'best':\n      color = new THREE.Color('#5edc1f');\n      break;\n  \n    case 'infeasible':\n      color = new THREE.Color('#dd3300');\n      break;\n\n    default:\n      color = new THREE.Color('#0059c9');\n  }\n  return color.toArray();\n};\n\nconst computeColors = data => {\n  const colors = data.map(d => (\n    d.is_best\n      ? 'best'\n      : d.is_feasible ? 'normal' : 'infeasible'\n  )).map(getColor).flat();\n  return colors;\n};\n\nexport const useEAData = ( fileData ) => ( \n  useMemo(() => {\n    const sourceData = fileData ? fileData : eaData;\n    const { data, limits } = sourceData;\n    const n = data.length;\n    const nPoints = Object.keys(data[0]).length;\n    const times = data.map(d => d[0].time);\n    const maxTime = max(times);\n    const scale = scaleLinear().domain(limits).range([-pointsScale,pointsScale]);\n    const points = data.map(d => d.map(point => point.data.map(scale)).flat());\n    const colors = data.map(computeColors);\n\n    const pointsData = data.map(d => d.map( point => (\n      `Individual ${point.idx} ${point.is_best ? '(Best!)' : ''}\n       Fitness value: ${point.fitness_value.toFixed(2)}\n       Constraints sum: ${point.constraints_sum.toFixed(2)}\n       Feasible: ${point.is_feasible}\n       Time: ${point.time}\n       `\n    )));\n\n    return { n, nPoints, times, maxTime, points, colors, pointsData };\n  }, [ fileData ])\n);","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport { Slider, Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst ProgressBarSlider = withStyles({ \n  root: {\n    // color: '#52af77',\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus,&:hover,&$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\nconst BaseSlider = withStyles({\n  root: {\n    color: '#8f8f8f',\n  },\n  thumb: {\n    height: 15,\n    width: 15,\n    margintop: -5,\n    marginleft: -5,\n    color: '#787878',\n  },\n  valueLabel: {\n    top: 20,\n    '& *': {\n      background: 'transparent',\n      color: '#000',\n      width: 50\n    },\n  },\n  rail: {\n    height: 5,\n  },\n})(Slider);\n\nexport const ProgressBar = ({ min, max, now, label, onChange }) => {\n  return (\n    <div className='row'>\n      <ProgressBarSlider\n        className='col-8 offset-2'\n        defaultValue={0}\n        valueLabelDisplay='off'\n        aria-label='pretto slider'\n        min={min}\n        max={max}\n        value={now}\n        step={1}\n        onChange={onChange}\n      />\n      <Typography className='col-2 align-self-center'>{label}</Typography>\n    </div>\n  );\n};\n\nexport const GeneralSlider = ({ min, max, now, step, defaultValue, valueLabelFormat, onChange, className }) => {\n  return (\n    <BaseSlider\n      className={className}\n      defaultValue={defaultValue}\n      valueLabelFormat={valueLabelFormat}\n      valueLabelDisplay='on'\n      aria-label='pretto slider'\n      min={min}\n      max={max}\n      value={now}\n      step={step}\n      onChange={onChange}\n      track={false}\n    />\n  );\n};\n","import React, { useMemo, useRef } from 'react';\n\nexport const FileUpload = ({ className, setContent }) => { \n  const ref = useRef();\n  const reader = useMemo(() => {\n    const fr = new FileReader();\n    fr.onload = e => {\n      setContent(JSON.parse(fr.result));\n    };\n    return fr;\n  }, [ setContent ]);\n  return (\n    <div className={className}>\n      <input\n        ref={ref}\n        type='file'\n        style={{display: 'none'}}\n        accept='.json'\n        onChange={e => {\n          reader.readAsText(e.target.files[0]);\n        }}\n      />\n      <button\n        className='btn btn-outline-secondary btn-sm'\n        onClick={() => ref.current.click()}\n      >\n        Upload File\n      </button>\n    </div>\n  );\n };\n","import React, { useRef, useEffect, useMemo } from 'react';\nimport { useThree, useFrame } from 'react-three-fiber';\nimport { useSpring, a } from 'react-spring/three';\nimport { useMousePointInteraction } from './useMousePointInteraction';\nimport { combinations } from './utils';\nconst THREE = require('three');\n\n// settings\nconst backgroundColor = new THREE.Color('black');\nconst selectedPointSize = 2;\n\n// re-use for instance computations\nconst scratchObject3D = new THREE.Object3D();\n\nconst updateInstancedMeshMatrices = ({\n  sphereSize, mesh, points, colors, colorAttrib, colorArray, selectedPoint\n}) => {\n  if (!mesh) return;\n  const { show, index } = selectedPoint;\n  const selectedSize = show ? sphereSize*selectedPointSize : sphereSize;\n\n  [...Array(points.length/3)].fill(0).forEach((d,i) => {\n    const [ x, y, z ] = points.slice(i*3,(i+1)*3);\n    scratchObject3D.position.set(x, y, z);\n    scratchObject3D.scale.setScalar(i === index ? selectedSize : sphereSize);\n    scratchObject3D.updateMatrix();\n    mesh.setMatrixAt(i, scratchObject3D.matrix);\n  });\n\n  colors.forEach((d,i) => colorArray[i] = d);\n  colorAttrib.needsUpdate = true;\n  mesh.instanceMatrix.needsUpdate = true;\n};\n\nconst useAnimatedLayout = ({ points, colors, speed, onFrame }) => {\n  const animProps = useSpring({\n    points: points,\n    colors: colors,\n    onFrame: ({ points, colors }) => {\n      onFrame({ points, colors});\n    },\n    config: { duration: speed }\n  });\n\n  return animProps;\n};\n\nexport const InstancedPoints = ({\n  data, sphereSize, nPoints, speed, selectedPoint, setSelectedPoint\n}) => {\n  const meshRef = useRef();\n  const colorRef = useRef();\n  const { scene, aspect } = useThree();\n  const { points, colors } = data;\n  const colorArray = useMemo(() => new Float32Array(nPoints*3), [ nPoints ]);\n  const { show, index } = selectedPoint;\n\n  useEffect(() => {\n    if ( scene )\n      scene.background = backgroundColor;\n  }, [ scene ]);\n\n  // Animating on change\n  const { points: pointsAnim } = useAnimatedLayout({\n    points,\n    colors,\n    speed,\n    onFrame: ({ points, colors }) => {\n      updateInstancedMeshMatrices({\n        sphereSize,\n        aspect,\n        mesh: meshRef.current,\n        points,\n        colors,\n        colorAttrib: colorRef.current,\n        colorArray,\n        selectedPoint,\n      });\n    },\n  });\n\n  const { handleClick, handlePointerDown } = useMousePointInteraction({\n    selectedPoint,\n    onSelectPoint: setSelectedPoint\n  });\n\n  return (\n    <>\n      <instancedMesh\n        ref={meshRef}\n        args={[null, null, nPoints]}\n        frustumCulled={false}\n        onClick={handleClick}\n        onPointerDown={handlePointerDown}\n      >\n        <sphereBufferGeometry attach='geometry' args={[0.5, 16, 32]} >\n          <instancedBufferAttribute\n            ref={colorRef}\n            attachObject={['attributes', 'color']}\n            args={[colorArray, 3]}\n          />\n        </sphereBufferGeometry>\n        <meshStandardMaterial\n          attach='material'\n          vertexColors={THREE.VertexColors}\n        />\n      </instancedMesh>\n      { show && (\n        <a.group\n          position={ pointsAnim.interpolate((...d) => d.slice(index*3, (index+1)*3)) }\n        >\n          {combinations(sphereSize*8, 3, true).map((d,i) => \n            <pointLight\n              key={i}\n              distance={85}\n              position={d}\n              intensity={5}\n              decay={15}\n              color=\"#ffffff\"\n            />\n          )}\n        </a.group>\n      )}\n    </>\n  );\n};\n","const THREE = require('three');\n\nexport const getClientPosition = (point, size, camera) => {\n  const clientPosition = new THREE.Vector3(...point);\n  clientPosition.project(camera).addScalar(1).divideScalar(2);\n  clientPosition.x *= size.width;\n  clientPosition.y *= size.height;\n  return clientPosition;\n};\n\nexport const getCanvasPosition = (clientPosition, size, camera) => {\n  clientPosition.x /= size.width;\n  clientPosition.y /= size.height;\n  clientPosition.multiplyScalar(2).subScalar(1).unproject(camera);\n  return [clientPosition.x, clientPosition.y, 0];\n};\n\nexport const combinations = (value, size, includeNegative=false) => {\n  let out = []\n  Array(size).fill(0).forEach((_v,i) => {\n    const t = Array(size).fill(0);\n    t[i] = value;\n    out.push(t.slice())\n    if ( includeNegative ) {\n      t[i] = -value;\n      out.push(t)\n    }\n  });\n  return out;\n};","import { useRef } from \"react\";\n\nexport const useMousePointInteraction = ({ selectedPoint, onSelectPoint }) => {\n  // track mousedown position to skip click handlers on drags\n  const mouseDownRef = useRef([0, 0]);\n  const handlePointerDown = e => {\n    mouseDownRef.current[0] = e.clientX;\n    mouseDownRef.current[1] = e.clientY;\n  };\n\n  const handleClick = event => {\n    const { instanceId, clientX, clientY } = event;\n    const downDistance = Math.sqrt(\n      Math.pow(mouseDownRef.current[0] - clientX, 2) +\n        Math.pow(mouseDownRef.current[1] - clientY, 2)\n    );\n\n    // skip click if we dragged more than 5px distance\n    if (downDistance > 5) {\n      event.stopPropagation();\n      return;\n    }\n\n    // toggle the point\n    const { show, index } = selectedPoint;\n    onSelectPoint({\n      show: show\n        ? index === instanceId ? false : true\n        : true,\n      index: instanceId\n    });\n  };\n\n  return { handlePointerDown, handleClick };\n};\n","import React, { useRef, useEffect } from 'react';\nimport { extend, useThree, useFrame } from 'react-three-fiber';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls';\nimport { select } from 'd3';\nconst THREE = require('three');\nextend({ TrackballControls });\n\n// key code constants\nconst ALT_KEY = 18;\nconst CTRL_KEY = 17;\nconst CMD_KEY = 91;\n\nexport const Controls = ({ minDistance, maxDistance, defaultPosition }) => {\n  const controls = useRef();\n  const { camera, gl } = useThree();\n\n  useFrame(() => {\n    // update the view as the vis is interacted with\n    controls.current.update();\n  });\n\n  useEffect(() => {\n    const view = select(gl.domElement);\n    view.on('dblclick.zoom', () => {\n      // reset look-at (target) and camera position\n      controls.current.target.set(0, 0, 0);\n      camera.position.set(...defaultPosition);\n\n      // needed for trackball controls, reset the up vector\n      camera.up.set(\n        controls.current.up0.x,\n        controls.current.up0.y,\n        controls.current.up0.z\n      );\n    });\n  }, [ gl, camera, defaultPosition ])\n\n  return (\n    <trackballControls\n      ref={controls}\n      args={[camera, gl.domElement]}\n      minDistance={minDistance}\n      maxDistance={maxDistance}\n      dynamicDampingFactor={0.1}\n      keys={[\n        ALT_KEY, // orbit\n        CTRL_KEY, // zoom\n        CMD_KEY, // pan\n      ]}\n      mouseButtons={{\n        LEFT: THREE.MOUSE.PAN, // make pan the default instead of rotate\n        MIDDLE: THREE.MOUSE.ZOOM,\n        RIGHT: THREE.MOUSE.ROTATE,\n      }}\n    />\n  );\n};\n","import React, { useRef, useEffect, useMemo } from 'react';\nimport { extend, useThree, useFrame } from 'react-three-fiber';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass';\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader';\nconst THREE = require('three');\n\nextend({ EffectComposer, ShaderPass, RenderPass, UnrealBloomPass });\n\nexport default function Effects() {\n  const composer = useRef();\n  const { scene, gl, size, camera } = useThree();\n  const aspect = useMemo(() => new THREE.Vector2(size.width, size.height), [\n    size,\n  ]);\n  useEffect(() => void composer.current.setSize(size.width, size.height), [\n    size,\n  ]);\n  useFrame(() => composer.current.render(), 1);\n\n  const bloom = {\n    resolution: aspect,\n    strength: 2,\n    radius: 0,\n    threshold: 0.1,\n  };\n\n  return (\n    <effectComposer ref={composer} args={[gl]}>\n      <renderPass attachArray='passes' scene={scene} camera={camera} />\n\n      <unrealBloomPass\n        attachArray='passes'\n        args={[bloom.resolution, bloom.strength, bloom.radius, bloom.threshold]}\n      />\n\n      <shaderPass\n        attachArray='passes'\n        args={[FXAAShader]}\n        material-uniforms-resolution-value={[1 / size.width, 1 / size.height]}\n        renderToScreen\n      />\n    </effectComposer>\n  );\n}\n","import React from 'react';\nimport { Canvas } from 'react-three-fiber';\nimport { InstancedPoints } from './InstancedPoints';\nimport { Controls } from './Controls';\nimport Effects from './Effects';\n\n// camera settings\nconst fov = 30;\nconst near = 5;\nconst far = 300;\nconst defaultPosition = [0, 0, 150];\nconst grid = { size: 80, divisions: 10 };\n\nexport const ThreeVis = ({ data, sphereSize, nPoints, speed, selectedPoint, setSelectedPoint }) => {\n  return (\n    <Canvas\n      camera={{\n        fov: fov,\n        near: 0.1,\n        far: 5000,\n        position: defaultPosition\n      }}\n      onPointerMissed={() => setSelectedPoint({ show:false, index: 0})}\n    >\n      <Controls\n        minDistance={near}\n        maxDistance={far}\n        defaultPosition={defaultPosition}\n      />\n      <ambientLight\n        color='#ffffff'\n        intensity={0.15}\n      />\n      <hemisphereLight\n        color='#ffffff'\n        skyColor='#ffffff'\n        groundColor='#000000'\n        intensity={0.7}\n      />\n      <InstancedPoints\n        {...{data, sphereSize, nPoints, speed, selectedPoint, setSelectedPoint}}\n      />\n      <gridHelper\n        args={[grid.size, grid.divisions]}\n        position={[0,-30,0]}\n        rotation={[0,0,0]}\n      />\n      <Effects />\n    </Canvas>\n  );\n};","import 'bootstrap/dist/css/bootstrap.css';\nimport React, { useState, useMemo } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useEAData } from './useEAData';\nimport { ProgressBar, GeneralSlider } from './sliders';\nimport { FileUpload } from './FileUpload';\nimport './index.css';\nimport { usePlayerControl } from './usePlayerControl';\nimport { useKeyEvents } from './useKeyEvents';\nimport { ThreeVis } from './ThreeVis/ThreeVis';\n\n// controls\nconst defaultSpeed = 250;\nconst defaultSphereSize = 2\nconst speedStep = 25;\nconst minSpeed = 25;\nconst maxSpeed = 2500;\nconst sphereSizeStep = 0.25;\n\nconst App = () => {\n  const [ fileData, setFileData ] = useState(null);\n  const eaData = useEAData(fileData);\n  const { n, nPoints, maxTime } = eaData;\n  const [ selectedPoint, setSelectedPoint ] = useState({ show: false, index: 0});\n  const [ sphereSize, setSphereSize ] = useState(defaultSphereSize);\n  const [ speed, setSpeed ] = useState(defaultSpeed);\n  const [ time, setTime ] = useState(0);\n  const data = useMemo(() => ({\n    points: eaData.points[time],\n    colors: eaData.colors[time],\n    pointsData: eaData.pointsData[time],\n    thisTime: eaData.times[time]\n  }), [ time, eaData ]);\n  const { PlayerControl, stopPlay, tooglePlay } = usePlayerControl({ n, setTime, time, speed });\n  useKeyEvents({ tooglePlay, setTime, n, setSpeed, speedStep, minSpeed, maxSpeed })\n\n  return (\n    <div className='main-container'>\n      <div className='canvas-container'>\n        <div className='time-dialog'>\n          {`Time: ${data.thisTime}/${maxTime}`}\n        </div>\n        {selectedPoint.show && (<div className='hover-description'>\n            { data.pointsData[selectedPoint.index] }\n          </div>\n        )}\n        <ThreeVis {...{data, sphereSize, nPoints, speed, selectedPoint, setSelectedPoint }} />\n      </div>\n      <div className='html-bottom-container'>\n        <ProgressBar\n          min={0}\n          max={n-1}\n          now={time}\n          label={`${time}/${n-1} gen`}\n          onChange={(e,value) => setTime(value) }\n        />\n        { PlayerControl }\n        <div className='row'>\n          <GeneralSlider\n            className={'col-4 offset-4'}\n            min={25}\n            max={2500}\n            now={speed}\n            step={speedStep}\n            valueLabelFormat={d => `${d} ms`}\n            unit={'ms'}\n            defaultValue={defaultSpeed}\n            onChange={(e,value) => setSpeed(value)}\n          />\n          <GeneralSlider\n            className={'col-1 offset-1'}\n            min={0.25}\n            max={8}\n            now={sphereSize}\n            step={sphereSizeStep}\n            valueLabelFormat={d => `${d.toFixed(2)} sz`}\n            defaultValue={defaultSphereSize}\n            onChange={(e,value) => setSphereSize(value)}\n          />\n        </div>\n        <FileUpload\n          className='row file-upload offset-1'\n          setContent={d => {\n            setFileData(d);\n            setTime(0);\n            stopPlay();\n          }}\n        />\n        <div className='git-info row justify-content-end'>\n          <a href='https://github.com/renato145/show_evolution'>Source code</a>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { useRef, useState, useCallback } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay, faPause, faCaretLeft, faCaretRight, faStepBackward, faStepForward } from '@fortawesome/free-solid-svg-icons'\n\nexport const usePlayerControl = ({ n, setTime, time, speed }) => {\n  const [ play, setPlay ] = useState(false);\n  const [, setPlayCb ] = useState(null)\n  const playRef = useRef();\n  playRef.current = { n, time, speed, play };\n  \n  const removeTimeout = useCallback(() => {\n    setPlayCb(playCb => {\n      if ( playCb ) {\n        clearTimeout(playCb);\n        return null;\n      }\n    });\n  }, []);\n\n  const playFunc = useCallback(() => {\n    const { n, time, speed, play } = playRef.current;\n    if ( (time < (n-1)) & play ) {\n      setTime(time + 1);\n      setPlayCb(setTimeout(playFunc, speed));\n    } else {\n      setPlay(false);\n      removeTimeout();\n    }\n  }, [ removeTimeout, setTime ]);\n\n  const stopPlay = useCallback(() => {\n    setPlay(false);\n    removeTimeout();\n  }, [ removeTimeout ])\n\n  const tooglePlay = useCallback(() => {\n    const { speed, play } = playRef.current;\n    if ( !play ) {\n      setPlay(true);\n      setPlayCb(setTimeout(playFunc, speed));\n    } else {\n      setPlay(false);\n      removeTimeout();\n    }\n  }, [ playFunc, removeTimeout ]);\n\n  const PlayerControl =  (\n    <div className='controllers row justify-content-center'>\n      <div className='button-container'>\n        <button\n          type='button'\n          className='btn btn-default'\n          onClick={() => setTime(0)}\n        >\n          <FontAwesomeIcon icon={faStepBackward} />\n        </button>\n        <button\n          type='button'\n          className='btn btn-default'\n          onClick={() => setTime(d => Math.max(d-1, 0) )}\n        >\n          <FontAwesomeIcon icon={faCaretLeft} />\n        </button>\n        <button\n          type='button'\n          className='btn btn-default'\n          onClick={tooglePlay}\n        >\n          <FontAwesomeIcon icon={play ? faPause : faPlay} />\n        </button>\n        <button\n          type='button'\n          className='btn btn-default'\n          onClick={() => setTime(d => Math.min(d+1, n-1) )}\n        >\n          <FontAwesomeIcon icon={faCaretRight} />\n        </button>\n        <button\n          type='button'\n          className='btn btn-default'\n          onClick={() => setTime(n-1)}\n        >\n          <FontAwesomeIcon icon={faStepForward} />\n        </button>\n      </div>\n    </div>\n  );\n\n  return { PlayerControl, stopPlay, tooglePlay };\n};\n","import { useEffect } from \"react\";\n\nexport const useKeyEvents = ({ tooglePlay, setTime, n, setSpeed, speedStep, minSpeed, maxSpeed }) => {\n  useEffect(() => {\n    document.onkeydown = e => {\n      if (e.target.tagName === 'BODY') {\n        switch (e.code) {\n          case 'Space':\n            tooglePlay();\n            break;\n        \n          case 'ArrowLeft':\n            setTime(d => Math.max(d-1, 0) );\n            break;\n\n          case 'ArrowRight':\n            setTime(d => Math.min(d+1, n-1) );\n            break;\n\n          case 'ArrowUp':\n            setSpeed(d => Math.min(d+speedStep, maxSpeed))\n            break;\n\n          case 'ArrowDown':\n            setSpeed(d => Math.max(d-speedStep, minSpeed))\n            break;\n\n          default:\n            break;\n        }\n      }\n    };\n  }, [ tooglePlay, setTime, n, setSpeed, speedStep, maxSpeed, minSpeed ]);\n};\n"],"sourceRoot":""}